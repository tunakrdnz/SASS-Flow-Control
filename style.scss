@use "../sass_exercise_3-functions_modules/variables.scss" as v;
@use "../sass_exercise_3-functions_modules/functions.scss" as f;
@use "sass:color";


@mixin base($color, $font-size: f.rem-convert()) {
    color: $color;
    font-size: $font-size;
    place-items: center;
    text-align: center;
    width: 100%;
    
}
.title-style {
    width: fit-content;
    color: v.$color-tertiary;
    border-bottom: f.rem-convert(1) solid v.$color-secondary;
    text-align: center;
    grid-column: span 4;
}
  
.container {
    @include base(v.$color-secondary,v.$border-lines);
    border: f.rem-convert(2) solid red;
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    &-title {
        @extend .title-style;
        
    }
    &-sub-title {
        @extend .title-style;
        border: f.rem-convert(2) solid red;
        padding: f.rem-convert(16);

    }

    .articles {
        @include base(v.$color-secondary,f.rem-convert());
        grid-column: span 4;
        display: flex;
        width: 95%;
        
        
        .article {
            @include base(v.$color-secondary);
            border: f.rem-convert(2) solid green;
            .text {
               height: f.rem-convert(100);
               margin-top: f.rem-convert(50);
                
            }
        }
        .article:nth-child(odd) .text {
            color:v.$color-primary;
        }
    }
      $boxes: (
        "box 1": 1rem,
        "box 2": 2rem,
        "box 3": 3rem
      );
  

    .fs {
        grid-column: span 4;
        display: flex;
        flex-flow: row nowrap;
        justify-content: space-between;
        margin-top: f.rem-convert(30);
        width: 95%;

        @each $key, $value in $boxes {
            &-#{$value} {
              width: f.rem-convert(45);
              height: f.rem-convert(45);
              border: f.rem-convert(1) solid v.$color-primary;
              font-size: $value;
            }
        }

        @for $var from 1 to 20 {
            &#{" "div}:nth-of-type(#{$var}) {
              $bg-color: color.adjust(white, $lightness: calc($var * -5%));
              $text-color: color.adjust(black, $lightness: calc($var * 5%));
              background-color: $bg-color;
              color: $text-color;
              @if $var == 10 {
                $text-color: color.adjust(color.adjust(black, $blackness: calc($var * -5%)), $lightness: 15%);
                background-color: v.$color-secondary;
                color: $text-color;
                font-weight: bolder;
              } 
            }        
        }
    }

    .footer {
        @include base(v.$color-tertiary,f.rem-convert());
        grid-column:span 4;
        border: f.rem-convert(2) solid blue;
        padding: f.rem-convert(40);
        margin: f.rem-convert(30);
        width: 90%;
        font-size: f.rem-convert(24);
    }
   

}